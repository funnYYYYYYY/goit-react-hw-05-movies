{"version":3,"file":"static/js/134.f85ce6c2.chunk.js","mappings":"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","sources":["components/MoviesList.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst fakeUrl =\n  'https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj';\n\nconst Container = styled.div`\n  width: 1280px;\n  padding: 52px 24px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Gallery = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  text-align: center;\n  margin: -16px;\n  list-style: none;\n  text-decoration: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst Img = styled.img`\n  border-radius: 5px;\n  width: 395px;\n  height: 575px;\n\n  cursor: pointer;\n`;\n\nconst Item = styled.li`\n  position: relative;\n  width: calc(33.3333% - 32px);\n  margin: 10px;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Link = styled(NavLink)`\n  margin-bottom: 12 px;\n  overflow: hidden;\n  list-style: none;\n  text-decoration: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst Text = styled.p`\n  font-size: 15px;\n\n  font-weight: 700;\n  color: black;\n`;\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      <Gallery>\n        {movies.map(movie => (\n          <Item key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.poster_path ? (\n                <Img\n                  src={`${BASE_IMG_URL + movie.poster_path}`}\n                  alt={movie.title}\n                />\n              ) : (\n                <Img src={`${fakeUrl}`} alt={movie.title} />\n              )}\n              <Text>{movie.title || movie.name}</Text>\n            </Link>\n          </Item>\n        ))}\n      </Gallery>\n    </Container>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getFilmsByQuery } from 'services/api';\nimport { useSearchParams } from 'react-router-dom';\nimport { MoviesList } from 'components/MoviesList';\nimport styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  margin-top: 10px;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [params, setParams] = useSearchParams();\n\n  useEffect(() => {\n    const movieName = params.get('query');\n\n    if (!movieName) {\n      return;\n    }\n\n    getFilmsByQuery(movieName).then(setMovies);\n  }, [params]);\n\n  const onChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setParams({ query });\n  };\n\n  return (\n    <>\n      <Form onSubmit={onSubmit}>\n        <input type=\"text\" onChange={onChange} />\n        <button type=\"submit\">Search</button>\n      </Form>\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1597a1507afef30e38994154d5f0aaa9';\n\n// Популярні фільми які відображені на головній сторінці\n\nexport const getPopularFilms = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  console.log(results);\n  return results;\n};\n\n// Пошук фільмів по їх id\n\nexport const getFilmsById = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\n// Пошук фільмів по назві\n\nexport const getFilmsByQuery = async query => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return results;\n};\n\n// Відображення відгуків фільму\n\nexport const getFilmsDisplayMovieReviews = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data.results;\n};\n\n// Відображення акторського складу\n\nexport const getFilmsCastReflection = async id => {\n  const { data } = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\n//Відображення повної інформації про фільм\n\nexport const getDetailsAboutFilms = async id => {\n  const {\n    data: { genres },\n  } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n\n  return genres;\n};\n"],"names":["Container","styled","Gallery","Img","Item","Link","NavLink","Text","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","poster_path","src","alt","title","name","Form","useState","setMovies","query","setQuery","useSearchParams","params","setParams","useEffect","movieName","get","getFilmsByQuery","then","onSubmit","e","preventDefault","type","onChange","target","value","axios","API_KEY","getPopularFilms","results","data","console","log","getFilmsById","getFilmsDisplayMovieReviews","getFilmsCastReflection","cast","getDetailsAboutFilms","genres"],"sourceRoot":""}